// Problem 776D CODEFORCES

#include <bits/stdc++.h>
using namespace std;

vector <bool> status;
vector <int> bicoloreo(100001, -1);
//                    to status
vector <vector <pair<int, int>>> graph(100001);
vector<pair<int, int>> puertas(100001, {-1, -1});
bool ok = true;

void dfs(int u, int c){
//    cout << u << " " << c << endl;
    bicoloreo[u] = c;
    for(auto v : graph[u]){
        if(bicoloreo[v.first] == -1){
            if(v.second == 0){
                dfs(v.first, 1-c);
            } else {
                dfs(v.first, c);
            }
        } else {
            if(v.second == 0 && bicoloreo[v.first] ==  bicoloreo[u]){
                ok = false;
            } else if(v.second == 1 && bicoloreo[v.first] !=  bicoloreo[u]){
                ok = false;
            }
        }
    }
}

void build_graph(int n){
    for(int i = 1; i < n+1; i++){
        graph[puertas[i].first].push_back({puertas[i].second, status[i]});
        graph[puertas[i].second].push_back({puertas[i].first, status[i]});
//        cout << "--> " << i << " " << puertas[i].first << " " << puertas[i].second << " " << status[i] << endl;
    }
}

int main(){
    int n, m, x, a, b; cin >> n >> m;
    status.push_back(0);
    for(int i = 0; i < n; i++){
        cin >> a;
        status.push_back(a);
    }
    for(int i = 0; i < m; i++){
        cin >> x;
        for(int j = 0; j < x; j++){
            cin >> b;
            if(puertas[b].first == -1){
                puertas[b].first = i+1;
            } else {
                puertas[b].second = i+1;
            }
        }
    }
    build_graph(n);
    for(int i = 1; i < m+1; i++){
        if(bicoloreo[i] == -1){
            dfs(i, 0);
        }
        if(!ok){ cout << "NO" << endl; return 0;}
    }
    if(ok){ cout << "YES" << endl;}
//    for(int i = 1; i < n+1; i++){
//        cout << bicoloreo[i] << " ";
//    }
}
