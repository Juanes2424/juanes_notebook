// Complexity: N

#include <bits/stdc++.h>
using namespace std;

void mx(int arr[], int n, int k){
    deque<int> deck(k);
	for(int i = 0; i < k; i++){
		while((!deck.empty()) && arr[i] >= arr[deck.back()]){
			deck.pop_back();
        }
		deck.push_back(i);
	}
	for(int i = k; i < n; i++) {
		cout << arr[deck.front()] << " ";
		while((!deck.empty()) && deck.front() <= i - k){
			deck.pop_front();
        }
		while((!deck.empty()) && arr[i] >= arr[deck.back()]){
			deck.pop_back();
        }
		deck.push_back(i);
	}
	cout << arr[deck.front()];
}

int main(){
	int n; cin >> n;
	int arr[n];
	for(int i = 0; i < n; i++){
        cin >> arr[i];
	}
	int k; cin >> k; // subarray of size k
	mx(arr, n, k);
}
