#include <bits/stdc++.h>
using namespace std;

int input[1001], toSort[1001], piv;

long long quickSort ( int lft, int rgt, int lev ) {
  if ( lft >= rgt ) return 0LL;
  piv = lft + input[lev] % (rgt-lft+1);
  vector <int> lessThan, moreThan;
  for ( int i = lft; i <= rgt; ++i ) {
    if ( toSort[i] < toSort[piv] )
      lessThan.push_back ( toSort[i] );
    else if ( toSort[i] > toSort[piv] )
      moreThan.push_back ( toSort[i] );
  }
  toSort[lft+lessThan.size()] = toSort[piv];
  for ( int i = 0; i < lessThan.size(); ++i )
    toSort[lft+i] = lessThan[i];
  for ( int i = 0; i < moreThan.size(); ++i )
    toSort[lft+lessThan.size()+i+1] = moreThan[i];
  int i = lft + lessThan.size();
  return quickSort ( lft, i-1, lev+1 ) +
     quickSort ( i+1, rgt, lev+1 ) + (rgt-lft+1);
}

int main(){
    int n;
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> toSort[i];
    }
    quickSort(0, n-1, 0);
    cout << n << " " << piv << endl;
    for(int i = 0; i < n; i++){
        cout << toSort[i] << endl;
    }
}
